@model List<LMSBL.DBModels.HighScoreUsersReportModel>
@{
    ViewBag.Title = "High Score Users";
    Layout = "~/Views/Shared/_LayoutNew.cshtml";
}

<div class="container-fluid mt-4 mb-4 pl-4 pr-4">
    <div class="row mb-1">
        <div class="col">
            <h4>High Score Users</h4>
        </div>
    </div>
    <div class="container-fluid mt-4 mb-4 pl-4 pr-4">
        <div class="mt-5 pt-3 pl-3 pr-3 course-list-container list-box" >
            <div class="row">
                <div class="col search-container">
                    <i class="fas fa-search"></i>
                    <input class="search-box" type="text" id="txtSearch" placeholder="Search Course/Quiz by name..." />
                </div>
                <div class="col text-right">
                    <ul class="list-inline progress-list mt-2">
                        <li class="list-inline-item">
                            <div class="dropdown">
                                <button class="btn btn-secondary dropdown-toggle create-learning-btn" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    <i class="fas fa-file-export"></i> Export
                                </button>
                                <div class="dropdown-menu export-menu" aria-labelledby="dropdownMenuButton">
                                    <a class="dropdown-item" href="@Url.Action("ExportToExcel", "Reports", new {ReportName="High Score Users Report"})">
                                        <i class="fa fa-file-excel-o" aria-hidden="true"></i>
                                        Excel
                                    </a>
                                    <a class="dropdown-item" href="@Url.Action("ExportToPdf", "Reports", new {ReportName="High Score Users Report"})">
                                        <i class="fa fa-file-pdf-o" aria-hidden="true"></i>
                                        PDF
                                    </a>
                                </div>
                            </div>
                        </li>
                    </ul>
                </div>
            </div>
            <div class="row mt-3" id="dvActivityData">
                <div class="table-responsive">
                    <table class="table" id="activityTable">
                        <thead>
                            <tr>
                                <th scope="col">Sr. No.</th>
                                <th scope="col">Learning</th>
                                <th scope="col">Type</th>
                                <th scope="col">Full Name</th>
                                <th scope="col">Duration (Mins)</th>
                                <th scope="col">Time Spent</th>
                                <th scope="col">Score</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model != null)
                            {
                                if (Model.Count > 0)
                                {
                                    int count = 0;
                                    foreach (var user in Model)
                                    {
                                        count++;
                                        var score = user.Score;
                                        if (user.ActivityType == "Quiz")
                                        {
                                            score = Convert.ToString((Convert.ToInt32(user.Score) * 100) / Convert.ToInt32(user.TotalQuestion));
                                        }
                                        <tr>
                                            <td class="add-column-padding">@count</td>
                                            <td>@user.ActivityName</td>
                                            <td>@user.ActivityType</td>
                                            <td>@user.FullName</td>
                                            @if (!string.IsNullOrEmpty(user.Duration))
                                            {
                                                <td class="add-column-padding">@user.Duration</td>
                                            }
                                            else
                                            {
                                                <td class="add-column-padding">-</td>
                                            }
                                            @if (!string.IsNullOrEmpty(user.CompletedTime))
                                            {
                                                <td class="add-column-padding">@user.CompletedTime</td>
                                            }
                                            else
                                            {
                                                <td class="add-column-padding">-</td>
                                            }
                                            <td class="add-column-padding">@score%</td>

                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="8" align="center">No Activity Available</td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="8">No Activity Available</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>

        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        $('#activityTable').DataTable({
            //"aaSorting": [[ 3, "desc" ]],
            "paging": true,
            "ordering": true,
            "info": true,
            "bFilter": true,
            "pageLength": 10,
            "pagingType": "simple_numbers",
            //language: {
            //    paginate: {
            //        next: '&#8594;', // or '→'
            //        previous: '&#8592;' // or '←'
            //    }
            //}
        });

        $('#activityTable_filter').hide();

        $('#txtSearch').on('keyup', function () {

            $.fn.dataTable.ext.search.push(function (settings, searchData) {
                var term = $('#txtSearch').val().toLowerCase()
                for (var i = 0; i < searchData.length; i++) {
                    if (searchData[i].toLowerCase().indexOf(term) == 0) {
                        return true;
                    }
                }
                return false;
            });
            var table = $('#activityTable').DataTable();
            table.draw();
        });
    });


</script>


<style>
    table.dataTable thead .sorting_asc {
        background: url("https://cdn.datatables.net/1.10.0/images/sort_asc.png") no-repeat center left;
    }

    table.dataTable thead .sorting_desc {
        background: url("https://cdn.datatables.net/1.10.0/images/sort_desc.png") no-repeat center left;
    }

    table.dataTable thead .sorting {
        background: url("https://cdn.datatables.net/1.10.0/images/sort_both.png") no-repeat center left;
    }
</style>