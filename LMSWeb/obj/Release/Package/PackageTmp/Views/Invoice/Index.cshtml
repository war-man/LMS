@model LMSWeb.ViewModel.CRMInvoiceViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutCRM.cshtml";
}


@using (Html.BeginForm("AddInvoice", "Invoice", FormMethod.Post, new { enctype = "multipart/form-data", id = "frmaddInvoice", @class = "multisteps-form__form" }))
{

    <div class="multisteps-form__panel shadow p-4 list-box bg-white" data-animation="scaleIn">
        <h5 class="multisteps-form__title">Invoices</h5>
        <div class="row col-sm-12 col-md-12 col-xl-12 ml-auto mr-auto" style="display:flex;">
            @Html.HiddenFor(model => model.ObjCRMInvoivce.InvoiceId)
            @Html.HiddenFor(model => model.ObjCRMInvoivce.Status)
            @Html.HiddenFor(model => model.JsonData)
            <div class="col-sm-6">
                @Html.DropDownListFor(model => model.ObjCRMInvoivce.ClientId, new SelectList(Model.lstCRMclient, "Value", "Text"), "Select Client", htmlAttributes: new { id = "ddlclientlist", @class = "input100" })
            </div>
            <div class="col-sm-6">
                @Html.HiddenFor(model => model.ObjCRMInvoivce.InvoiceNumber)
                @Html.LabelFor(model => model.ObjCRMInvoivce.InvoiceNumber) : <span id="invoiceNumber">@Model.ObjCRMInvoivce.InvoiceNumber</span>
            </div>
        </div>
        <div class="row col-sm-12 col-md-12 col-xl-12 ml-auto mr-auto" style="display:flex;">
            <div class="col-sm-4">
                @Html.TextBoxFor(model => model.ObjCRMInvoivce.InvoiceDate, "{0:MM/dd/yyyy}", new { @class = "input100 datepicker", @id = "dtInvoiceDate", @readonly = "readonly", @autocomplete = "off", placeholder = "Invoice Date" })
                @Html.TextBoxFor(model => model.ObjCRMInvoivce.Reference, new { @class = "input100", placeholder = "Reference" })
            </div>
            <div class="col-sm-4">
                @Html.TextBoxFor(model => model.ObjCRMInvoivce.InvoiceDueDate, "{0:MM/dd/yyyy}", new { @class = "input100 datepicker", @id = "dtInvoiceDueDate", @readonly = "readonly", @autocomplete = "off", placeholder = "Invoice Due Date" })
                @Html.DropDownListFor(model => model.ObjCRMInvoivce.InvoiceCurrency, new SelectList(Model.lstCRMCurriencies, "Value", "Text"), "Select Currency", htmlAttributes: new { id = "ddlcurrencylist", @class = "input100" })
            </div>
            <div class="col-sm-4">
                @Html.TextBoxFor(model => model.ObjCRMInvoivce.GSTNumber, new { @class = "input100", placeholder = "GST Number" })
                <button type="button" id="btnAddItem" class="btn btn-primary" style="margin-left:20px;"> Add Item</button>
            </div>
        </div>
        <div  id="dvInvoiceItems"></div>
        <div class="row col-sm-12 col-md-12 col-xl-12 ml-auto mr-auto" style="display:flex;">
            <div class="col-sm-4"> </div>
            <div class="col-sm-4" style="text-align:end;">@Html.TextBoxFor(model => model.ObjCRMInvoivce.GSTRate, new { @class = "input50", @type = "number", @id = "txtgstno", placeholder = "GST Rate" })</div>
            <div class="col-sm-4">
                @Html.TextBoxFor(model => model.ObjCRMInvoivce.SubTotal, new { @class = "input100", @id = "txtsubtotal", @readonly = "readonly", placeholder = "Sub Total" })

            </div>
        </div>
        <div class="row col-sm-12 col-md-12 col-xl-12 ml-auto mr-auto" style="display:flex;">
            <div class="col-sm-4"></div>
            <div class="col-sm-4"></div>
            <div class="col-sm-4">
                @Html.TextBoxFor(model => model.ObjCRMInvoivce.InvoiceTotal, new { @class = "input100", @id = "txttotal", @readonly = "readonly", placeholder = "Invoice Total" })
            </div>
        </div>
        <div class="button-row d-flex mt-2">
            <button type="button" id="btnSaveDraft" class="btn btn-primary ml-auto"> Save as Draft</button>&nbsp;&nbsp;
            <button type="button" id="btnSave" class="btn btn-primary"> Save</button>
        </div>       
    </div>    
    <br />

    <div id="dvClientInvoice">

        @Html.Partial("~/Views/Invoice/_InvoiceList.cshtml", Model)
    </div>
}

<script>
    $(document).ready(function () {
        $('#dtInvoiceDate').datepicker({
            format: 'mm/dd/yyyy',
            showWeek: true
        });
        $('#dtInvoiceDueDate').datepicker({
            format: 'mm/dd/yyyy',
            showWeek: true
        });
        $('#btnAddItem').on("click", function () {
            AddInvoiceItem();
        });
        $('#btnSaveDraft').on("click", function () {
            SaveDraftInvoice();
        });
        $('#btnSave').on("click", function () {
            SaveInvoice();
        });
        $('#txtgstno').on("focusout", function () {
            CalculateSubTotal();
        });
    });
    var count = 1;
    function AddInvoiceItem() {
        var itemHTML = "<div class=\"row col-sm-12 col-md-12 col-xl-12 ml-auto mr-auto\" id=dvItem" + count + " style=\"display:flex;\">";

        itemHTML += "<div class=\"col-sm-4\">";
        itemHTML += "<input type=\"text\" class=input100 placeholder=\"Item Description\" id=txtItemDesc" + count + "></input>";
        itemHTML += "</div>";

        itemHTML += "<div class=\"col-sm-3\">";
        itemHTML += "<input type=\"number\" class=input50 placeholder=\"Item Price\" id=txtItemPrice" + count + "></input>";
        itemHTML += "</div>";

        itemHTML += "<div class=\"col-sm-3\">";
        itemHTML += "<input type=\"number\" class=input100 placeholder=\"Item Amount\" id=txtItemAmount" + count + " onfocusout=\"CalculateSubTotal(this)\"></input>";
        itemHTML += "</div>";
        itemHTML += "<div class=\"col-sm-2\" style=text-align:end;>";
        itemHTML += "<button onclick=\"removeItem(" + count + ")\" id=btn" + count + " type=\"button\" class=\"question-btn-for-option btn text-center btn-primary  \" style=\"margin-left: 5px;\"> - </button>";
        itemHTML += "</div>";

        itemHTML += "</div>";

        $("#dvInvoiceItems").append(itemHTML);
        count++;
    }

    function removeItem(id) {
        $("#dvItem" + id).remove();
    }

    function SaveDraftInvoice() {
        var isValidate = ValidateInvoice();
        if (isValidate) {
            SaveToDB("Draft");
        }
    }

    function SaveInvoice() {
        var isValidate = ValidateInvoice();
        if (isValidate) {
            SaveToDB("Saved");
        }
    }

    function ValidateInvoice() {
        var returnStatus = true;

        if ($('#ddlclientlist').val() == null || $('#ddlclientlist').val() == "") {
            toastr.error('Please select Client');
            $('#ddlclientlist').focus();
            returnStatus = false;
            return false;
        }
        if ($('#dtInvoiceDate').val() == null || $('#dtInvoiceDate').val() == "") {
            toastr.error('Please select Invoice Date');
            $('#dtInvoiceDate').focus();
            returnStatus = false;
            return false;
        }
        if ($('#dtInvoiceDueDate').val() == null || $('#dtInvoiceDueDate').val() == "") {
            toastr.error('Please select Invoice due Date');
            $('#dtInvoiceDueDate').focus();
            returnStatus = false;
            return false;
        }
        if ($('#ddlcurrencylist').val() == null || $('#ddlcurrencylist').val() == "") {
            toastr.error('Please select Currency');
            $('#ddlcurrencylist').focus();
            returnStatus = false;
            return false;
        }

        var IDs = $("#dvInvoiceItems div[id^='dvItem']");
        if (IDs.length == 0) {
            toastr.error('Please add items in Invoice');
            returnStatus = false;
            return false;
        }
        $.each(IDs, function (index, value) {
            var id = value.id.substring(6, value.id.length);

            if ($("#txtItemDesc" + id).val() == null || $("#txtItemDesc" + id).val() == "") {
                $("#txtItemDesc" + id).focus();
                toastr.error('Please enter item description');
                returnStatus = false;
                return false;
            }
            if ($("#txtItemPrice" + id).val() == null || $("#txtItemPrice" + id).val() == "") {
                $("#txtItemPrice" + id).focus();
                toastr.error('Please enter item price');
                returnStatus = false;
                return false;
            }
            if ($("#txtItemAmount" + id).val() == null || $("#txtItemAmount" + id).val() == "") {
                $("#txtItemAmount" + id).focus();
                toastr.error('Please enter item amount');
                returnStatus = false;
                return false;
            }

        });

        return returnStatus;
    }

    function CalculateSubTotal(sentId) {
        var IDs = $("#dvInvoiceItems div[id^='dvItem']");
        var subTotal = 0;
        $.each(IDs, function (index, value) {
            var id = value.id.substring(6, value.id.length);
            if ($("#txtItemAmount" + id).val() != null && $("#txtItemAmount" + id).val() != "")
                subTotal = +subTotal + +$("#txtItemAmount" + id).val();
        });

        $("#txtsubtotal").val(subTotal);

        if ($("#txtgstno").val() == null || $("#txtgstno").val() == "") {
            $("#txttotal").val(subTotal);
        }
        else {
            var gstrate = $("#txtgstno").val();
            var total = +subTotal + (+subTotal * +gstrate / 100);
            $("#txttotal").val(total)
        }

    }

    function SaveToDB(status) {
        $("#divLoader").show();
        $("#ObjCRMInvoivce_Status").val(status);

        var IDs = $("#dvInvoiceItems div[id^='dvItem']");
        var ItemObject = [];
        $.each(IDs, function (index, value) {
            var id = value.id.substring(6, value.id.length);
            invoiceItem = {}
            invoiceItem["ItemDesc"] = $("#txtItemDesc" + id).val();
            invoiceItem["ItemPrice"] = $("#txtItemPrice" + id).val();
            invoiceItem["ItemAmount"] = $("#txtItemAmount" + id).val();
            ItemObject.push(invoiceItem)
        });


        $("#JsonData").val(JSON.stringify(ItemObject));

        var data = $('#frmaddInvoice').serialize();
        console.log(data);
        $.ajax({
            url: $('#frmaddInvoice').attr('action'),
            type: 'post',
            dataType: "html",
            data: data,
            success: function (data) {
                console.log(data)
                if (data == "True") {
                    toastr.success("Invoice Saved");
                    var id = $('#ddlclientlist').val();
                    if (id != null && id != "") {
                        GetInvoices(id);
                        $('#dvClientInvoice').show();
                    }
                    $("#divLoader").hide();
                }
                else {
                    toastr.error('error occured while saving data');
                    $("#divLoader").hide();
                }
            }
        });
    }

    $('#ddlclientlist').change(function () {
        $("#divLoader").show();
        var id = $('#ddlclientlist').val();
        if (id != null && id != "") {
            GetInvoiceNumber(id);
            GetInvoices(id);
            $('#dvClientInvoice').show();
        }
        else {

            $('#dvClientInvoice').hide();
        }
        $("#divLoader").hide();
    });

    function GetInvoiceNumber(id) {
        $.ajax({
            type: "POST",
            url: "/Invoice/GetInvoiceNumber",
            data: '{clientId: ' + JSON.stringify(id) + '}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                $("#invoiceNumber").val(response);
                $("#ObjCRMInvoivce_InvoiceNumber").val(response);
            },
            failure: function (response) {
            },
            error: function (response) {
                $("#invoiceNumber").html(response.responseText);
                $("#ObjCRMInvoivce_InvoiceNumber").val(response.responseText);
            }
        });
    }

    function GetInvoices(id) {
        $.ajax({
            type: "POST",
            url: "/Invoice/GetInvoices",
            data: '{clientId: ' + JSON.stringify(id) + '}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                $('#dvClientInvoice').html(response);
            },
            failure: function (response) {
            },
            error: function (response) {
                $("#dvClientInvoice").html(response.responseText);
            }
        });
    }

    function EditInvoice(invoiceId) {
        $("#divLoader").show();
        $.ajax({
            type: "POST",
            url: "/Invoice/GetInvoiceForEdit",
            data: '{InvoiceId: ' + JSON.stringify(invoiceId) + '}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                LoadInvoiceDetails(response);
                $("#divLoader").hide();
            },
            failure: function (response) {
            },
            error: function (response) {
            }
        });
    }

    function LoadInvoiceDetails(response) {
        $("#ObjCRMInvoivce_InvoiceId").val(response.ObjCRMInvoivce.InvoiceId);
        $("#ObjCRMInvoivce_Status").val(response.ObjCRMInvoivce.Status);
        $('#ddlclientlist').val(response.ObjCRMInvoivce.ClientId);
        $("#ObjCRMInvoivce_InvoiceNumber").val(response.ObjCRMInvoivce.InvoiceNumber);
        $("#invoiceNumber").html(response.ObjCRMInvoivce.InvoiceNumber);
        $("#ObjCRMInvoivce_GSTNumber").val(response.ObjCRMInvoivce.GSTNumber);

        var invoiceDate = new Date(parseInt(response.ObjCRMInvoivce.InvoiceDate.substr(6)));
        $("#dtInvoiceDate").val(invoiceDate.format("mm/dd/yyyy"));
        $("#dtInvoiceDate").datepicker("setDate", invoiceDate.format("mm/dd/yyyy"));

        var invoiceDueDate = new Date(parseInt(response.ObjCRMInvoivce.InvoiceDueDate.substr(6)));
        $("#dtInvoiceDueDate").val(invoiceDueDate.format("mm/dd/yyyy"));
        $("#dtInvoiceDueDate").datepicker("setDate", invoiceDueDate.format("mm/dd/yyyy"));

        $("#ObjCRMInvoivce_Reference").val(response.ObjCRMInvoivce.Reference);
        $('#ddlcurrencylist').val(response.ObjCRMInvoivce.InvoiceCurrency);

        $("#txtsubtotal").val(response.ObjCRMInvoivce.SubTotal);
        $("#txtgstno").val(response.ObjCRMInvoivce.GSTRate);
        $("#txttotal").val(response.ObjCRMInvoivce.InvoiceTotal);

        LoadInvoiceItemsForEdit(response);

    }

    function LoadInvoiceItemsForEdit(response) {
        $("#dvInvoiceItems").html("");
        $.each(response.ObjCRMInvoiceItemLST, function (index, value) {
            console.log(value);

            var itemHTML = "<div class=\"multisteps-form__content\" id=dvItem" + value.ItemId + " style=\"display:flex;\">";

            itemHTML += "<div class=\"col-sm-4\">";
            itemHTML += "<input type=\"text\" class=input100 placeholder=\"Item Description\" id=txtItemDesc" + value.ItemId + "></input>";
            itemHTML += "</div>";

            itemHTML += "<div class=\"col-sm-3\">";
            itemHTML += "<input type=\"number\" class=input50 placeholder=\"Item Price\" id=txtItemPrice" + value.ItemId + "></input>";
            itemHTML += "</div>";

            itemHTML += "<div class=\"col-sm-3\">";
            itemHTML += "<input type=\"number\" class=input100 placeholder=\"Item Amount\" id=txtItemAmount" + value.ItemId + " onfocusout=\"CalculateSubTotal(this)\"></input>";
            itemHTML += "</div>";
            itemHTML += "<div class=\"col-sm-2\" style=text-align:end;>";
            itemHTML += "<button onclick=\"removeItem(" + value.ItemId + ")\" id=btn" + value.ItemId + " type=\"button\" class=\"col question-btn-for-option btn text-center btn-primary profle-submit-btn-for-option\" style=\"margin-left: 5px;\"> - </button>";
            itemHTML += "</div>";

            itemHTML += "</div>";

            $("#dvInvoiceItems").append(itemHTML);

            $("#txtItemDesc" + value.ItemId).val(value.ItemDescription);
            $("#txtItemPrice" + value.ItemId).val(value.Price);
            $("#txtItemAmount" + value.ItemId).val(value.Amount);
        });
    }

    function MarkPaidInvoice(invoiceId) {
        $("#divLoader").show();
        $.ajax({
            type: "POST",
            url: "/Invoice/MarkPaidInvoice",
            data: '{invoiceId: ' + JSON.stringify(invoiceId) + '}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {

            },
            failure: function (response) {
            },
            error: function (response) {
                if (response.responseText == "True") {
                    toastr.success("Invoice marked as Paid Successfully");
                    var id = $('#ddlclientlist').val();
                    if (id != null && id != "") {
                        GetInvoices(id);
                        $("#divLoader").hide();
                    }
                }
                else {
                    toastr.error('error occured while saving updating status of Invoice');
                }
            }
        });
    }

    function PreviewInvoice(invoiceId) {
        $("#divLoader").show();
        $.ajax({
            type: "POST",
            url: "/Invoice/DownloadInvoice",
            data: '{invoiceId: ' + JSON.stringify(invoiceId) + '}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                $("#divLoader").hide();
            },
            failure: function (response) {
            },
            error: function (response) {
                if (response.responseText == "True") {
                    toastr.success("Invoice marked as Paid Successfully");
                    $("#divLoader").hide();
                }
                else {
                    toastr.error('error occured while saving updating status of Invoice');
                    $("#divLoader").hide();
                }
            }
        });
    }
</script>
